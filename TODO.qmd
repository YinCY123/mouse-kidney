---
title: "TODO"
author: "yincy"
format: html
editor: visual
---

cell_type_orders

-   Integration comparison  
-   cell type markers, newly find markers  
-   Neurons interaction with other cell types  
-   interaction directions: neurons expressed ligands and receptors  
-   the the interaction type: gene set enrichment analysis (too little genes)  
-   Slc's expression along the renal tubule and collecting ducts  
-   catecholamine or noradrenaline receptors expression along renal tubule and collecting ducts  
-   Aqp's expression along the renal tubule and collecting ducts  
-   differential expressed genes between different endothelial  
-   endothelial from different location comparision  
-   neurons interaction with endothelial  
-   neurons interaction with immune cells (APCs and T cells)


# currently not used circos plot

```{r}
#| message: false
#| warning: false
library(circlize)
library(RColorBrewer)
cols <- brewer.pal(10, "Set3")

pdf("circlize.pdf")
circos.par("start.degree" = 50, canvas.ylim = c(-1.4, 1.4), 
           canvas.xlim = c(-1.4, 1.4), cell.padding = rep(0, 4), 
           gap.after = c(rep(1, 7), 5, 5, 1))
m <- cbind(rep(0, length(levels(sces$level1_cluster))), 
           c(4, 1, 3, 6, 2,
             6, 6, 7, 2, 3))
circos.initialize(sectors = sces$level1_cluster, xlim = m)

# layer 3
circos.track(sectors = sces$level1_cluster, 
             ylim = c(-1, 1), bg.border = NA, 
             bg.col = cols, track.height = 0.2, 
             panel.fun = function(x, y){
    xlim = get.cell.meta.data("xlim")
    ylim = get.cell.meta.data("ylim")
    xrange = get.cell.meta.data("xrange")
    sector.index = get.cell.meta.data("sector.index")
    breaks <- c(4, 1, 3, 6, 2, 
                6, 6, 7, 2, 3)
    names(breaks) <- levels(sces$level1_cluster)
    seqs <- seq(xlim[1], xlim[2], xrange/breaks[sector.index])

    circos.rect(xleft = seqs[-length(seqs)], 
                xright = seqs[-1], 
                ybottom = ylim[1], 
                ytop = ylim[2], 
                border = "black")
    
    df <- colData(sces)[, c("level1_cluster", "level3_cluster")]
    labels_list <- split(df$level3_cluster, df$level1_cluster)
    labels_list <- lapply(labels_list, function(x){sort(unique(x))})
    sector.index <- get.cell.meta.data("sector.index")
    steps <- xrange/breaks[sector.index]
    seqs <- seq(xlim[1] + steps/1.6, xlim[2] + steps/1.6, steps)
    
    circos.text(x = seqs[-length(seqs)], 
                y = ylim[2] + mm_y(1), 
                labels = labels_list[[sector.index]], 
                cex = 0.3, 
                facing = "clockwise", 
                niceFacing = TRUE, 
                adj = 0)
})


# layer 2
circos.track(ylim = c(-1, 1),bg.border = NA, bg.col = cols, track.height = 0.25, panel.fun = function(x, y){
    xlim = get.cell.meta.data("xlim")
    ylim = get.cell.meta.data("ylim")
    xrange = get.cell.meta.data("xrange")
    sector.index = get.cell.meta.data("sector.index")
    breaks <- c(1, 1, 1, 2, 1, 2, 5, 6, 2, 2)
    names(breaks) <- levels(sces$level1_cluster)
    seqs <- seq(xlim[1], xlim[2], xrange/breaks[sector.index])

    circos.rect(xleft = seqs[-length(seqs)],
                ybottom = ylim[1] + mm_y(1),
                xright = seqs[-1],
                ytop = ylim[2],
                border = "black")

    df <- colData(sces)[, c("level1_cluster", "level2_cluster")]
    labels_list <- split(df$level2_cluster, df$level1_cluster)
    labels_list <- lapply(labels_list, function(x){sort(unique(x))})
    sector.index <- get.cell.meta.data("sector.index")
    steps <- xrange/breaks[sector.index]
    seqs <- seq(xlim[1] + steps/1.6, xlim[2] + steps/1.6, steps)
    circos.text(x = seqs[-length(seqs)],
                y = ylim[1] + mm_y(1.3),
                labels = labels_list[[sector.index]],
                cex = 0.3,
                facing = "clockwise",
                niceFacing = TRUE,
                adj = 0)
})

circos.link(sector.index1 = levels(neurons_interactions[[1]]), 
            point1 = apply(m, 1, mean), 
            sector.index2 = levels(neurons_interactions[[2]]), 
            point2 = apply(m, 1, mean))

# layer 1
circos.track(ylim = c(-1, 1), bg.border = NA, track.height = 0.05, 
             bg.col = cols, cell.padding = c(0.02, 0),
             panel.fun = function(x, y){
                 circos.text(x = CELL_META$xcenter, y = CELL_META$ylim[2] - mm_y(0.5), 
                             labels = CELL_META$sector.index, cex = 0.4, 
                             facing = "bending.inside", niceFacing = TRUE)
             })

dev.off()

circos.clear()
```
